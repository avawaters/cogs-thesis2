select(c("response", "melody", "version", "range", "n_plays"))
# loop through each row in response df and add as row to compiled df
for (i in 1:8) {
# characteristics abt the melody
melody <- as.factor(responses$melody[i])
version <- responses$version[i]
range <- responses$range[i]
# characteristics abt the response
rating <- responses$response[i]
plays <- responses$n_plays[i]
# add row to df
data <- data %>% add_row(id=sub, music_hist=music_hist, music_curr=music_curr,
seed=melody, version=version, range=range, rating=rating, plays=plays)
}
}
View(data)
rm(data)
data <- data.frame(id = character(),
music_hist = numeric(),
music_curr = numeric(),
seed = factor(),
version = character(),
range = numeric(),
rating = numeric(),
plays = numeric(),
stringsAsFactors = FALSE)
##### LOOP THROUGH ALL SUBJECTS #####
for (sub in sub_list) {
# import JSON data
sub_df <- fromJSON(paste0(dir, sub)) %>% select(-c("rt", "trial_type", "time_elapsed",
"internal_node_id", "question_order")) %>%
mutate(version=pred)
# save subject ID
sub <- unlist(strsplit(sub, ".json"))[1]
# info abt music experience
music_hist <- as.integer(ifelse(unlist(sub_df[5,]$response)["Q0"] == "No", 0, unlist(sub_df[6,]$response)["LessonYears"]))
music_curr <- as.integer(ifelse(((unlist(sub_df[5,]$response)["Q0"] == "No") ||
(sub_df[6,]$response)["LessonCurrent"] == "No"), 0, 1))
# df with responses
responses <- sub_df %>% filter(task == "rate") %>%
mutate(response=unlist(response) + 1) %>%
select(c("response", "melody", "version", "range", "n_plays"))
# loop through each row in response df and add as row to compiled df
for (i in 1:8) {
# characteristics abt the melody
melody <- as.factor(responses$melody[i])
version <- responses$version[i]
range <- responses$range[i]
# characteristics abt the response
rating <- responses$response[i]
plays <- responses$n_plays[i]
# add row to df
data <- data %>% add_row(id=sub, music_hist=music_hist, music_curr=music_curr,
seed=melody, version=version, range=range, rating=rating, plays=plays)
}
}
View(data)
# add row to df
data <- data %>% add_row(id=sub, music_hist=music_hist, music_curr=music_curr,
seed=melody, version=version, range=range,
rating=rating, plays=plays)
source("~/Desktop/Thesis/melodic_rating/analysis_rate/response_analysis.R", echo=TRUE)
View(data)
RStudio.Version()
#TEST
test_df <- fromJSON("~/Downloads/undefined.json") %>% select(-c("rt", "trial_type", "time_elapsed", "internal_node_id", "question_order"))
library(tidyverse)
library(jsonlite)
library(ez)
#TEST
test_df <- fromJSON("~/Downloads/undefined.json") %>% select(-c("rt", "trial_type", "time_elapsed", "internal_node_id", "question_order"))
View(test_df)
View(test_df)
library(tidyverse)
files <- list.files("../../melodic_gen/participants/")
files <- list.files("../../melodic_gen/data/participants/")
sub <- read_csv(files[1], show_col_types=FALSE)
sub <- read_csv(paste0(dir, files[1]), show_col_types=FALSE)
dir <- "../../melodic_gen/data/participants/"
sub <- read_csv(paste0(dir, files[1]), show_col_types=FALSE)
for (f in files[2:6]) {
sub <- rbind(sub, read_csv(paste0(dir, files[i]), show_col_types=FALSE))
}
for (f in files[2:6]) {
sub <- rbind(sub, read_csv(paste0(dir, f), show_col_types=FALSE))
}
head(sub)
sub %>% pull(id) %>% paste(sep=",")
sub %>% pull(id) %>% paste(sep=",", collapse=TRUE)
sub %>% pull(id) %>% paste(collapse=",")
sub %>% pull(id) %>% paste(collapse=", ")
library(ggplot2)
source("~/Desktop/Thesis/melodic_rating/analysis_rate/response_analysis.R", echo=TRUE)
View(sub_df)
source("~/Desktop/Thesis/melodic_rating/analysis_rate/response_analysis.R", echo=TRUE)
sub_df <- fromJSON(paste0(dir, sub)) %>%
select(-c("rt", "trial_type", "time_elapsed", "trial_index",
"internal_node_id", "question_order"))
sub_df <- fromJSON(paste0(dir, sub))
sub_df <- fromJSON(paste0(dir, sub, ".json")) %>%
select(-c("rt", "trial_type", "time_elapsed", "trial_index",
"internal_node_id", "question_order"))
View(sub_df)
responses <- sub_df %>% filter(task == "rate")
View(responses)
responses <- responses %>% mutate(response=unlist(response) + 1)
View(responses)
?rename
responses <- sub_df %>% filter(task == "rate") %>%
mutate(response=unlist(response) + 1) %>%
rename(version=pred) %>%
select(c("response", "version", "melody", "range", "n_plays"))
View(responses)
for (i in 1:8) {
# characteristics abt the melody
melody <- as.factor(responses$melody[i])
version <- as.factor(responses$version[i])
range <- responses$range[i]
# characteristics abt the response
rating <- responses$response[i]
plays <- responses$n_plays[i]
# add row to df
data <- data %>% add_row(id=sub, music_hist=music_hist, music_curr=music_curr,
seed=melody, version=version, range=range,
rating=rating, plays=plays)
data <- data %>% add_row(id=sub, music_hist=music_hist, music_curr=music_curr,
seed=melody, version=version, range=range,
rating=rating, plays=plays)
View(data)
source("~/Desktop/Thesis/melodic_rating/analysis_rate/response_analysis.R", echo=TRUE)
source("~/Desktop/Thesis/melodic_rating/analysis_rate/response_analysis.R", echo=TRUE)
)
source("~/Desktop/Thesis/melodic_rating/analysis_rate/response_analysis.R", echo=TRUE)
rlang::last_trace()
View(responses)
responses <- sub_df %>% filter(task == "rate") %>%
mutate(response=unlist(response) + 1) %>%
rename(version=pred) %>%
select(c("response", "version", "melody", "range", "n_plays")) %>%
mutate(sub=sub, music_hist=music_hist, music_curr=music_curr)
View(responses)
data <- data %>% rbind(repsonses)
data <- data %>% rbind(responses)
source("~/Desktop/Thesis/melodic_rating/analysis_rate/response_analysis.R", echo=TRUE)
source("~/Desktop/Thesis/melodic_rating/analysis_rate/response_analysis.R", echo=TRUE)
View(data)
source("~/Desktop/Thesis/melodic_rating/analysis_rate/response_analysis.R", echo=TRUE)
View(data)
# wid = var to collapse across
# within = vars that vary btwn obs of the same wid var
# between = vars that vary btwn obs of diff wid vars
unadj_anova <- ezANOVA(data, dv=rating, wid=id, within=c(melody, version))
# wid = var to collapse across
# within = vars that vary btwn obs of the same wid var
# between = vars that vary btwn obs of diff wid vars
unadj_anova <- ezANOVA(data, dv=rating, wid=sub, within=c(melody, version))
unadj_anova$ANOVA
anova <- ezANOVA(data, dv=rating, wid=sub, within=c(melody, version), between=music_hist, observed=music_hist)
anova$ANOVA
library(tidyverse)
library(jsonlite)
library(ez)
library(ggplot2)
data <- data.frame(id = character(),
music_hist = numeric(),
music_curr = numeric(),
seed = numeric(),
version = character(),
range = numeric(),
rating = numeric(),
plays = numeric(),
stringsAsFactors = FALSE)
participants <- data.frame(id=character(),
music_hist_any=numeric(),
music_hist=numeric(),
music_curr=numeric())
dir <- "../data/"
sub_list <- list.files(dir, pattern="json")
##### LOOP THROUGH ALL SUBJECTS #####
for (sub in sub_list) {
# import JSON data
sub_df <- fromJSON(paste0(dir, sub)) %>%
select(-c("rt", "trial_type", "time_elapsed", "trial_index",
"internal_node_id", "question_order"))
# save subject ID
sub <- unlist(strsplit(sub, ".json"))[1]
# info abt music experience
music_hist_any <- as.integer(ifelse(unlist(sub_df[5,]$response)["Q0"] == "No", 0, 1))
music_hist <- as.integer(ifelse(unlist(sub_df[5,]$response)["Q0"] == "No", 0, unlist(sub_df[6,]$response)["LessonYears"]))
music_curr <- as.integer(ifelse(((unlist(sub_df[5,]$response)["Q0"] == "No") ||
(sub_df[6,]$response)["LessonCurrent"] == "No"), 0, 1))
# df with responses
responses <- sub_df %>% filter(task == "rate") %>%
mutate(response=unlist(response) + 1) %>%
rename(rating=response) %>%
select(c("rating", "version", "melody", "range", "n_plays")) %>%
mutate(sub=sub, music_hist=music_hist, music_curr=music_curr)
data <- data %>% rbind(responses)
participants <- participants %>% rbind(data.frame(sub=sub, music_hist_any=music_hist_any,
music_hist=music_hist, music_curr=music_curr))
}
data$sub <- as.factor(data$sub)
data$melody <- as.factor(data$melody)
data$version <- as.factor(data$version)
data
##### ANALYSIS OF DATA #####
## summary statistics abt the participants
# proportion of ppl with any music experience
any_music <- participants %>% summarize(n=sum(music_hist_any), prop=sum(music_hist_any) / 60)
# avg number of years of music lessons
avg_yrs <- participants %>% filter(music_hist_any==1) %>%
summarize(avg=mean(music_hist))
curr_music <- participants %>% filter(music_hist_any==1) %>%
summarize(n=sum(music_curr), prop=sum(music_curr) / 23)
data %>% group_by(melody, version) %>% mutate(avg_rating=mean(rating),
se=sd(rating)) %>% ungroup() %>%
ggplot(aes(x=version, y=avg_rating, color=melody, group=melody)) +
theme_light() + theme(panel.grid = element_blank()) +
geom_point(size=2.5) + geom_line() +
labs(title="Average Ratings for Predictable vs. Unpredictable Melodies by Seed",
x="Version", y="Average Rating (1 to 7)", color="Seed Melody") +
scale_x_discrete(labels=c("Predictable", "Unpredictable")) +
scale_color_manual(values=c("seagreen3", "royalblue1", "indianred1", "purple1"))
View(data)
data %>% group_by(melody, version) %>% mutate(avg_rating=mean(rating))%>% ungroup() %>%
ggplot(aes(x=version, y=avg_rating, color=melody, group=melody)) +
theme_light() + theme(panel.grid = element_blank()) +
geom_point(size=2.5) + geom_line() +
labs(title="Average Ratings for Predictable vs. Unpredictable Melodies by Seed",
x="Version", y="Average Rating (1 to 7)", color="Seed Melody") +
scale_x_discrete(labels=c("Predictable", "Unpredictable")) +
scale_color_manual(values=c("seagreen3", "royalblue1", "indianred1", "purple1"))
data %>% group_by(melody, version) %>% mutate(avg_rating=mean(rating), se=sd(rating)/sqrt(n())) %>% ungroup() %>%
ggplot(aes(x=version, y=avg_rating, ymin=avg_rating-se, ymax=avg_rating+se, color=melody, group=melody)) +
theme_light() +
geom_point(size=2.5) + geom_line() + geom_errorbar() +
labs(title="Average Ratings for Predictable vs. Unpredictable Melodies by Seed",
x="Version", y="Average Rating (1 to 7)", color="Seed Melody") +
scale_x_discrete(labels=c("Predictable", "Unpredictable")) +
scale_color_manual(values=c("seagreen3", "royalblue1", "indianred1", "purple1"))
data %>% group_by(melody, version) %>% mutate(avg_rating=mean(rating), se=sd(rating)/sqrt(n())) %>% ungroup() %>%
ggplot(aes(x=version, y=avg_rating, ymin=avg_rating-se, ymax=avg_rating+se, color=melody, group=melody)) +
theme_light() +
geom_point(size=2.5) + geom_line() + geom_errorbar(width=0.1) +
labs(title="Average Ratings for Predictable vs. Unpredictable Melodies by Seed",
x="Version", y="Average Rating (1 to 7)", color="Seed Melody") +
scale_x_discrete(labels=c("Predictable", "Unpredictable")) +
scale_color_manual(values=c("seagreen3", "royalblue1", "indianred1", "purple1"))
data %>% group_by(melody, version) %>% mutate(avg_rating=mean(rating), se=sd(rating)/sqrt(n())) %>% ungroup() %>%
ggplot(aes(x=version, y=avg_rating, ymin=avg_rating-se, ymax=avg_rating+se, color=melody, group=melody)) +
theme_light() +
geom_point(size=2.5) + geom_line() + geom_errorbar(width=0.01) +
labs(title="Average Ratings for Predictable vs. Unpredictable Melodies by Seed",
x="Version", y="Average Rating (1 to 7)", color="Seed Melody") +
scale_x_discrete(labels=c("Predictable", "Unpredictable")) +
scale_color_manual(values=c("seagreen3", "royalblue1", "indianred1", "purple1"))
# ANOVA for version and rating
unadj_anova <- ezANOVA(data, dv=rating, wid=sub, within=c(melody, version))$ANOVA
# ANOVA for version and rating, accounting for:
#   - musical experience
#   - range
anova <- ezANOVA(data, dv=rating, wid=sub, within=c(melody, version), between=music_hist, observed=music_hist)
anova <- ezANOVA(data, dv=rating, wid=sub, within=c(melody, version), between=music_hist, observed=music_hist)$ANOVA
View(anova)
data_no4 <- data %>% filter(melody!=4)
data_no4$sub <- as.factor(data_no4$sub)
data_no4$melody <- as.factor(data_no4$melody)
data_no4$version <- as.factor(data_no4$version)
data_no4$music_hist <- as.factor(data_no4$music_hist)
anova_no4 <- ezANOVA(data_no4, dv=rating, wid=sub, within=c(melody, version), between=music_hist, observed=music_hist)
anova_no4 <- ezANOVA(data_no4, dv=rating, wid=sub, within=c(melody, version), between=music_hist, observed=music_hist)$ANOVA
View(anova_no4)
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version)) + geom_line() +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Melodic Cloze Probability") +
theme_light() + theme(panel.grid = element_blank())
seed1_df <- data.frame(c("p", "u"),
c(11/40, 11/40),
c(10/40, 10/40),
c(13/40, 3/40),
c(9/22, 5/18),
c(8/20, 9/20),
c(5/18, 4/21))
colnames(seed1_df) <- c("version", "gen1", "gen2", "gen3", "gen4", "gen5", "gen6")
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version)) + geom_line() +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Melodic Cloze Probability") +
theme_light() + theme(panel.grid = element_blank())
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version)) + geom_point() + geom_line() +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Melodic Cloze Probability") +
theme_light() + theme(panel.grid = element_blank())
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) + geom_point() + geom_line() +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Melodic Cloze Probability") +
theme_light() + theme(panel.grid = element_blank())
data %>% group_by(melody, version) %>% mutate(avg_rating=mean(rating), se=sd(rating)/sqrt(n())) %>% ungroup() %>%
ggplot(aes(x=version, y=avg_rating, ymin=avg_rating-se, ymax=avg_rating+se, color=melody, group=melody)) +
theme_light() +
geom_point(size=2.5) + geom_line() + geom_errorbar(width=0.03) +
labs(title="Average Ratings for Predictable vs. Unpredictable Melodies by Seed",
x="Version", y="Average Rating (1 to 7)", color="Seed Melody") +
scale_x_discrete(labels=c("Predictable", "Unpredictable")) +
scale_color_manual(values=c("seagreen3", "royalblue1", "indianred1", "purple1"))
data %>% group_by(melody, version) %>% mutate(avg_rating=mean(rating), se=sd(rating)/sqrt(n())) %>% ungroup() %>%
ggplot(aes(x=version, y=avg_rating, ymin=avg_rating-se, ymax=avg_rating+se, color=melody, group=melody)) +
theme_light() +
geom_point(size=2.5) + geom_line() + geom_errorbar(width=0.03) +
labs(title="Average Ratings for Predictable vs. Unpredictable Melodies by Seed",
x="Version", y="Average Rating (1 to 7)", color="Seed Melody") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c("Predictable", "Unpredictable")) +
scale_color_manual(values=c("seagreen3", "royalblue1", "indianred1", "purple1"))
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) +
geom_point() + geom_line() +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Melodic Cloze Probability") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_light() + scale_color_manual(values="seagreen3")
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) +
geom_point(color="seagreen3") + geom_line(color="seagreen3") +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Melodic Cloze Probability") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_light()
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) +
geom_point(color="seagreen3") + geom_line(color="seagreen3") +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Melodic Cloze Probability") +
theme_light() + theme(plot.title = element_text(hjust = 0.5))
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) +
geom_point(color="seagreen3") + geom_line(color="seagreen3") + xlim(0,6) +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Melodic Cloze Probability") +
theme_light() + theme(plot.title = element_text(hjust = 0.5))
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) +
geom_point(color="seagreen3") + geom_line(color="seagreen3") + xlim(0, 6) +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Melodic Cloze Probability") +
theme_light() + theme(plot.title = element_text(hjust = 0.5))
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) +
geom_point(color="seagreen3") + geom_line(color="seagreen3") +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Melodic Cloze Probability") +
theme_light() + theme(plot.title = element_text(hjust = 0.5))
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) +
geom_point(color="seagreen3") + geom_line(color="seagreen3") +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Probability") +
theme_light() + theme(plot.title = element_text(hjust = 0.5))
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) +
geom_point(color="seagreen3") + geom_line(color="seagreen3") +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Probability", group="Version") +
theme_light() + theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c("Predictable", "Unpredictable"))
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) +
geom_point(color="seagreen3") + geom_line(color="seagreen3") +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Probability", group="Version") +
theme_light() + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(labels=c("Predictable", "Unpredictable"))
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) +
geom_point(color="seagreen3") + geom_line(color="seagreen3") +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Probability", group="Version") +
theme_light() + theme(plot.title = element_text(hjust = 0.5)) +
scale_fill_discrete(labels=c("Predictable", "Unpredictable"))
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) +
geom_point(color="seagreen3") + geom_line(color="seagreen3") +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Probability", group="Version") +
theme_light() + theme(plot.title = element_text(hjust = 0.5)) +
scale_linetype_manual(labels=c("Predictable", "Unpredictable"))
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) +
geom_point(color="seagreen3") + geom_line(color="seagreen3") +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Probability", group="Version") +
theme_light() + theme(plot.title = element_text(hjust = 0.5))
seed1_df <- data.frame(c("Predictable", "Unpredictable"),
c(11/40, 11/40),
c(10/40, 10/40),
c(13/40, 3/40),
c(9/22, 5/18),
c(8/20, 9/20),
c(5/18, 4/21))
colnames(seed1_df) <- c("version", "gen1", "gen2", "gen3", "gen4", "gen5", "gen6")
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) +
geom_point(color="seagreen3") + geom_line(color="seagreen3") +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Probability", group="Version") +
theme_light() + theme(plot.title = element_text(hjust = 0.5))
seed1_df %>% pivot_longer(cols=starts_with("gen"), names_to="gen",
names_prefix="gen", values_to="probability") %>%
ggplot(aes(x=gen, y=probability*100, linetype=version, group=version)) +
geom_point(color="seagreen3") + geom_line(color="seagreen3") +
labs(title="Melodic Cloze Probability for Melody 1",
x="Generation", y="Probability", linetype="Version") +
theme_light() + theme(plot.title = element_text(hjust = 0.5))
anova_no4
anova_no4
pred_seed4 <- unlist(as.vector(data %>% filter(melody==4 & version=="p") %>% select(rating)))
unpred_seed4 <- unlist(as.vector(data %>% filter(melody==4 & version=="u") %>% select(rating)))
t.test(pred_seed4, y=unpred_seed4, paired=TRUE)
citation(tidyverse)
citation("tidyverse")
citation("jsonlite")
citation(ez_)
citation("ez")
citation("ggplot2")
library(tidyverse)
library(jsonlite)
library(ez)
library(ggplot2)
data <- data.frame(id = character(),
music_hist = numeric(),
music_curr = numeric(),
seed = numeric(),
version = character(),
range = numeric(),
rating = numeric(),
plays = numeric(),
stringsAsFactors = FALSE)
participants <- data.frame(id=character(),
music_hist_any=numeric(),
music_hist=numeric(),
music_curr=numeric())
dir <- "../data/"
sub_list <- list.files(dir, pattern="json")
##### LOOP THROUGH ALL SUBJECTS #####
for (sub in sub_list) {
# import JSON data
sub_df <- fromJSON(paste0(dir, sub)) %>%
select(-c("rt", "trial_type", "time_elapsed", "trial_index",
"internal_node_id", "question_order"))
# save subject ID
sub <- unlist(strsplit(sub, ".json"))[1]
# info abt music experience
music_hist_any <- as.integer(ifelse(unlist(sub_df[5,]$response)["Q0"] == "No", 0, 1))
music_hist <- as.integer(ifelse(unlist(sub_df[5,]$response)["Q0"] == "No", 0, unlist(sub_df[6,]$response)["LessonYears"]))
music_curr <- as.integer(ifelse(((unlist(sub_df[5,]$response)["Q0"] == "No") ||
(sub_df[6,]$response)["LessonCurrent"] == "No"), 0, 1))
# df with responses
responses <- sub_df %>% filter(task == "rate") %>%
mutate(response=unlist(response) + 1) %>%
rename(rating=response) %>%
select(c("rating", "version", "melody", "range", "n_plays")) %>%
mutate(sub=sub, music_hist=music_hist, music_curr=music_curr)
data <- data %>% rbind(responses)
participants <- participants %>% rbind(data.frame(sub=sub, music_hist_any=music_hist_any,
music_hist=music_hist, music_curr=music_curr))
}
data$sub <- as.factor(data$sub)
data$melody <- as.factor(data$melody)
data$version <- as.factor(data$version)
data
##### ANALYSIS OF DATA #####
## summary statistics abt the participants
# proportion of ppl with any music experience
any_music <- participants %>% summarize(n=sum(music_hist_any), prop=sum(music_hist_any) / 60)
# avg number of years of music lessons
avg_yrs <- participants %>% filter(music_hist_any==1) %>%
summarize(avg=mean(music_hist))
curr_music <- participants %>% filter(music_hist_any==1) %>%
summarize(n=sum(music_curr), prop=sum(music_curr) / 23)
## ANOVA call args:
#   wid = var to collapse across
#   within = vars that vary btwn obs of the same wid var
#   between = vars that vary btwn obs of diff wid vars
# ANOVA for version and rating
unadj_anova <- ezANOVA(data, dv=rating, wid=sub, within=c(melody, version))$ANOVA
# ANOVA for version and rating, accounting for:
#   - musical experience
#   - range
anova <- ezANOVA(data, dv=rating, wid=sub, within=c(melody, version), between=music_hist, observed=music_hist)$ANOVA
anova
anova
unadj_anova
